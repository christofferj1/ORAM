* General
The check boxes is to mark when something is added to the report
 - [ ] At the client side, the server strategy is used to separate the algorithm logic from the server logic. The server layer handles the server socket and in/output streams. It also converts between byte[] and int addresses, so the ORAM logic can work with 'sane' types. Both the separation and the 'sane' data types makes it easier to test.
 - [ ] The block interface is a way to handle a block, which sometimes consists of some data and an address of some sort, which is nicely separated (by the server)
   - [ ] There are different addresses for e.g. Path and lookahead (the later needs no address perhaps?)
 - [ ] Dummy blocks get address 0, as they do in some article (Log^3 N)
 - [ ] Address and data byte[] are padded by making sure all arrays are of same length (padded with zero's should enough when CPA secure encryption is used)
 - [ ] The dummy block check is done in Util, so it can be changed in a central place if the strategy is changed
 - [ ] Using 32 bytes for encrypted integers as it is easier with padding (less errors) and then I can get 16 bytes of randomness
   - [ ] All integers are changed to byte arrays of size fore before encryption, this pads them, so size does not disclose any information about addresses
 - [ ] The access strategies assumes blocks are of correct size. This should simulate a RAM placed on third party hardware, it does not provide more than simple/stupid read write operations
